
Predicting Netflix revenue by country
{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "c79e532c",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import statsmodels.api as sm\n",
    "from scipy import stats\n",
    "import seaborn as sns\n",
    "import statsmodels.formula.api as smf\n",
    "import os"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "a955030c",
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.read_csv(\"C:/Users/rajvi/OneDrive/Personal/Netflix Revenue.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "ddbf5c8a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>Global Revenue</th>\n",
       "      <th>UACN Revenue</th>\n",
       "      <th>EMEA Revenue</th>\n",
       "      <th>LATM Revenue</th>\n",
       "      <th>APAC Revenue</th>\n",
       "      <th>UACN Members</th>\n",
       "      <th>EMEA  Members</th>\n",
       "      <th>LATM Members</th>\n",
       "      <th>APAC Members</th>\n",
       "      <th>...</th>\n",
       "      <th>EMEA RPU</th>\n",
       "      <th>LATM  RPU</th>\n",
       "      <th>APAC  RPU</th>\n",
       "      <th>Domestic Members</th>\n",
       "      <th>Domestic Revenue</th>\n",
       "      <th>International Members</th>\n",
       "      <th>International Revenue</th>\n",
       "      <th>Domestic Free Trialers</th>\n",
       "      <th>Interntaional Free Trialers</th>\n",
       "      <th>Netflix Global Users</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>31-03-2012</td>\n",
       "      <td>869791000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>506665000.00</td>\n",
       "      <td>506665000.00</td>\n",
       "      <td>2409000.00</td>\n",
       "      <td>43425000.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>50,90,74,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>30-06-2012</td>\n",
       "      <td>889163000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>532705000.00</td>\n",
       "      <td>532705000.00</td>\n",
       "      <td>3024000.00</td>\n",
       "      <td>64973000.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>53,57,29,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>30-09-2012</td>\n",
       "      <td>905089000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>556027000.00</td>\n",
       "      <td>556027000.00</td>\n",
       "      <td>3689000.00</td>\n",
       "      <td>77744000.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>55,97,16,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>31-12-2012</td>\n",
       "      <td>945239000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>589471000.00</td>\n",
       "      <td>589471000.00</td>\n",
       "      <td>4892000.00</td>\n",
       "      <td>101400000.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>59,43,63,000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>31-03-2013</td>\n",
       "      <td>1023961000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>638649000.00</td>\n",
       "      <td>638649000.00</td>\n",
       "      <td>6331000.00</td>\n",
       "      <td>142019000.00</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>64,49,80,000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 21 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date  Global Revenue  UACN Revenue  EMEA Revenue  LATM Revenue  \\\n",
       "0  31-03-2012       869791000           NaN           NaN           NaN   \n",
       "1  30-06-2012       889163000           NaN           NaN           NaN   \n",
       "2  30-09-2012       905089000           NaN           NaN           NaN   \n",
       "3  31-12-2012       945239000           NaN           NaN           NaN   \n",
       "4  31-03-2013      1023961000           NaN           NaN           NaN   \n",
       "\n",
       "   APAC Revenue  UACN Members  EMEA  Members  LATM Members  APAC Members  ...  \\\n",
       "0           NaN           NaN            NaN           NaN           NaN  ...   \n",
       "1           NaN           NaN            NaN           NaN           NaN  ...   \n",
       "2           NaN           NaN            NaN           NaN           NaN  ...   \n",
       "3           NaN           NaN            NaN           NaN           NaN  ...   \n",
       "4           NaN           NaN            NaN           NaN           NaN  ...   \n",
       "\n",
       "   EMEA RPU  LATM  RPU  APAC  RPU  Domestic Members  Domestic Revenue  \\\n",
       "0       NaN        NaN        NaN      506665000.00      506665000.00   \n",
       "1       NaN        NaN        NaN      532705000.00      532705000.00   \n",
       "2       NaN        NaN        NaN      556027000.00      556027000.00   \n",
       "3       NaN        NaN        NaN      589471000.00      589471000.00   \n",
       "4       NaN        NaN        NaN      638649000.00      638649000.00   \n",
       "\n",
       "   International Members  International Revenue  Domestic Free Trialers  \\\n",
       "0             2409000.00            43425000.00                     NaN   \n",
       "1             3024000.00            64973000.00                     NaN   \n",
       "2             3689000.00            77744000.00                     NaN   \n",
       "3             4892000.00           101400000.00                     NaN   \n",
       "4             6331000.00           142019000.00                     NaN   \n",
       "\n",
       "   Interntaional Free Trialers  Netflix Global Users  \n",
       "0                          NaN          50,90,74,000  \n",
       "1                          NaN          53,57,29,000  \n",
       "2                          NaN          55,97,16,000  \n",
       "3                          NaN          59,43,63,000  \n",
       "4                          NaN          64,49,80,000  \n",
       "\n",
       "[5 rows x 21 columns]"
      ]
     },
     "execution_count": 69,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "99e435dd",
   "metadata": {},
   "outputs": [],
   "source": [
    "#pd.options.display.float_format = \"{:.2f}.format\"\n",
    "\n",
    "pd.options.display.float_format= \"{:.2f}\".format"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "0a8a6840",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Global Revenue</th>\n",
       "      <th>UACN Revenue</th>\n",
       "      <th>EMEA Revenue</th>\n",
       "      <th>LATM Revenue</th>\n",
       "      <th>APAC Revenue</th>\n",
       "      <th>UACN Members</th>\n",
       "      <th>EMEA  Members</th>\n",
       "      <th>LATM Members</th>\n",
       "      <th>APAC Members</th>\n",
       "      <th>UACN RPU</th>\n",
       "      <th>EMEA RPU</th>\n",
       "      <th>LATM  RPU</th>\n",
       "      <th>APAC  RPU</th>\n",
       "      <th>Domestic Members</th>\n",
       "      <th>Domestic Revenue</th>\n",
       "      <th>International Members</th>\n",
       "      <th>International Revenue</th>\n",
       "      <th>Domestic Free Trialers</th>\n",
       "      <th>Interntaional Free Trialers</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>45.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>28.00</td>\n",
       "      <td>28.00</td>\n",
       "      <td>28.00</td>\n",
       "      <td>28.00</td>\n",
       "      <td>12.00</td>\n",
       "      <td>12.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3804736311.11</td>\n",
       "      <td>3068940705.88</td>\n",
       "      <td>2075164352.94</td>\n",
       "      <td>862900117.65</td>\n",
       "      <td>683068588.24</td>\n",
       "      <td>72077470.59</td>\n",
       "      <td>64184470.59</td>\n",
       "      <td>36358823.53</td>\n",
       "      <td>26281294.12</td>\n",
       "      <td>14.20</td>\n",
       "      <td>10.91</td>\n",
       "      <td>8.00</td>\n",
       "      <td>9.05</td>\n",
       "      <td>1084327178.57</td>\n",
       "      <td>1084327178.57</td>\n",
       "      <td>29566642.86</td>\n",
       "      <td>726564964.29</td>\n",
       "      <td>1498000.00</td>\n",
       "      <td>3873833.33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>2559212341.96</td>\n",
       "      <td>420900367.49</td>\n",
       "      <td>459401133.13</td>\n",
       "      <td>134961751.66</td>\n",
       "      <td>220414082.50</td>\n",
       "      <td>3129072.47</td>\n",
       "      <td>11494174.54</td>\n",
       "      <td>4624147.94</td>\n",
       "      <td>8939003.71</td>\n",
       "      <td>1.43</td>\n",
       "      <td>0.54</td>\n",
       "      <td>0.51</td>\n",
       "      <td>0.56</td>\n",
       "      <td>440280966.56</td>\n",
       "      <td>440280966.56</td>\n",
       "      <td>23724009.73</td>\n",
       "      <td>644425658.74</td>\n",
       "      <td>298961.54</td>\n",
       "      <td>1435151.93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>869791000.00</td>\n",
       "      <td>2256851000.00</td>\n",
       "      <td>1233379000.00</td>\n",
       "      <td>630472000.00</td>\n",
       "      <td>319602000.00</td>\n",
       "      <td>66501000.00</td>\n",
       "      <td>42542000.00</td>\n",
       "      <td>27547000.00</td>\n",
       "      <td>12141000.00</td>\n",
       "      <td>11.45</td>\n",
       "      <td>10.13</td>\n",
       "      <td>7.12</td>\n",
       "      <td>7.69</td>\n",
       "      <td>506665000.00</td>\n",
       "      <td>506665000.00</td>\n",
       "      <td>2409000.00</td>\n",
       "      <td>43425000.00</td>\n",
       "      <td>1018000.00</td>\n",
       "      <td>2156000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>1484728000.00</td>\n",
       "      <td>2702776000.00</td>\n",
       "      <td>1723474000.00</td>\n",
       "      <td>785368000.00</td>\n",
       "      <td>483660000.00</td>\n",
       "      <td>69969000.00</td>\n",
       "      <td>58734000.00</td>\n",
       "      <td>34318000.00</td>\n",
       "      <td>19835000.00</td>\n",
       "      <td>13.22</td>\n",
       "      <td>10.43</td>\n",
       "      <td>7.50</td>\n",
       "      <td>8.94</td>\n",
       "      <td>730686250.00</td>\n",
       "      <td>730686250.00</td>\n",
       "      <td>9312500.00</td>\n",
       "      <td>211826250.00</td>\n",
       "      <td>1378250.00</td>\n",
       "      <td>2814500.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>2984859000.00</td>\n",
       "      <td>3170972000.00</td>\n",
       "      <td>2343674000.00</td>\n",
       "      <td>836647000.00</td>\n",
       "      <td>762414000.00</td>\n",
       "      <td>73387000.00</td>\n",
       "      <td>68508000.00</td>\n",
       "      <td>37894000.00</td>\n",
       "      <td>26853000.00</td>\n",
       "      <td>14.25</td>\n",
       "      <td>10.88</td>\n",
       "      <td>8.14</td>\n",
       "      <td>9.21</td>\n",
       "      <td>1036056000.00</td>\n",
       "      <td>1036056000.00</td>\n",
       "      <td>22800000.00</td>\n",
       "      <td>485816500.00</td>\n",
       "      <td>1493000.00</td>\n",
       "      <td>3558000.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>6148286000.00</td>\n",
       "      <td>3350424000.00</td>\n",
       "      <td>2432239000.00</td>\n",
       "      <td>998948000.00</td>\n",
       "      <td>870705000.00</td>\n",
       "      <td>74296000.00</td>\n",
       "      <td>73534000.00</td>\n",
       "      <td>39624000.00</td>\n",
       "      <td>33719000.00</td>\n",
       "      <td>14.91</td>\n",
       "      <td>11.56</td>\n",
       "      <td>8.37</td>\n",
       "      <td>9.32</td>\n",
       "      <td>1310108500.00</td>\n",
       "      <td>1310108500.00</td>\n",
       "      <td>45919250.00</td>\n",
       "      <td>1075956250.00</td>\n",
       "      <td>1603000.00</td>\n",
       "      <td>4605750.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>8161503000.00</td>\n",
       "      <td>3608645000.00</td>\n",
       "      <td>2561831000.00</td>\n",
       "      <td>1070192000.00</td>\n",
       "      <td>933523000.00</td>\n",
       "      <td>75215000.00</td>\n",
       "      <td>77373000.00</td>\n",
       "      <td>41699000.00</td>\n",
       "      <td>39478000.00</td>\n",
       "      <td>16.37</td>\n",
       "      <td>11.66</td>\n",
       "      <td>8.67</td>\n",
       "      <td>9.74</td>\n",
       "      <td>1996092000.00</td>\n",
       "      <td>1996092000.00</td>\n",
       "      <td>80773000.00</td>\n",
       "      <td>2105592000.00</td>\n",
       "      <td>2065000.00</td>\n",
       "      <td>7131000.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Global Revenue  UACN Revenue  EMEA Revenue  LATM Revenue  APAC Revenue  \\\n",
       "count           45.00         17.00         17.00         17.00         17.00   \n",
       "mean    3804736311.11 3068940705.88 2075164352.94  862900117.65  683068588.24   \n",
       "std     2559212341.96  420900367.49  459401133.13  134961751.66  220414082.50   \n",
       "min      869791000.00 2256851000.00 1233379000.00  630472000.00  319602000.00   \n",
       "25%     1484728000.00 2702776000.00 1723474000.00  785368000.00  483660000.00   \n",
       "50%     2984859000.00 3170972000.00 2343674000.00  836647000.00  762414000.00   \n",
       "75%     6148286000.00 3350424000.00 2432239000.00  998948000.00  870705000.00   \n",
       "max     8161503000.00 3608645000.00 2561831000.00 1070192000.00  933523000.00   \n",
       "\n",
       "       UACN Members  EMEA  Members  LATM Members  APAC Members  UACN RPU  \\\n",
       "count         17.00          17.00         17.00         17.00     17.00   \n",
       "mean    72077470.59    64184470.59   36358823.53   26281294.12     14.20   \n",
       "std      3129072.47    11494174.54    4624147.94    8939003.71      1.43   \n",
       "min     66501000.00    42542000.00   27547000.00   12141000.00     11.45   \n",
       "25%     69969000.00    58734000.00   34318000.00   19835000.00     13.22   \n",
       "50%     73387000.00    68508000.00   37894000.00   26853000.00     14.25   \n",
       "75%     74296000.00    73534000.00   39624000.00   33719000.00     14.91   \n",
       "max     75215000.00    77373000.00   41699000.00   39478000.00     16.37   \n",
       "\n",
       "       EMEA RPU  LATM  RPU  APAC  RPU  Domestic Members  Domestic Revenue  \\\n",
       "count     17.00      17.00      17.00             28.00             28.00   \n",
       "mean      10.91       8.00       9.05     1084327178.57     1084327178.57   \n",
       "std        0.54       0.51       0.56      440280966.56      440280966.56   \n",
       "min       10.13       7.12       7.69      506665000.00      506665000.00   \n",
       "25%       10.43       7.50       8.94      730686250.00      730686250.00   \n",
       "50%       10.88       8.14       9.21     1036056000.00     1036056000.00   \n",
       "75%       11.56       8.37       9.32     1310108500.00     1310108500.00   \n",
       "max       11.66       8.67       9.74     1996092000.00     1996092000.00   \n",
       "\n",
       "       International Members  International Revenue  Domestic Free Trialers  \\\n",
       "count                  28.00                  28.00                   12.00   \n",
       "mean             29566642.86           726564964.29              1498000.00   \n",
       "std              23724009.73           644425658.74               298961.54   \n",
       "min               2409000.00            43425000.00              1018000.00   \n",
       "25%               9312500.00           211826250.00              1378250.00   \n",
       "50%              22800000.00           485816500.00              1493000.00   \n",
       "75%              45919250.00          1075956250.00              1603000.00   \n",
       "max              80773000.00          2105592000.00              2065000.00   \n",
       "\n",
       "       Interntaional Free Trialers  \n",
       "count                        12.00  \n",
       "mean                    3873833.33  \n",
       "std                     1435151.93  \n",
       "min                     2156000.00  \n",
       "25%                     2814500.00  \n",
       "50%                     3558000.00  \n",
       "75%                     4605750.00  \n",
       "max                     7131000.00  "
      ]
     },
     "execution_count": 71,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "53ea835e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['Date', 'Global Revenue', 'UACN Revenue', 'EMEA Revenue',\n",
       "       'LATM Revenue', 'APAC Revenue', 'UACN Members', 'EMEA  Members',\n",
       "       'LATM Members', 'APAC Members', 'UACN RPU', 'EMEA RPU', 'LATM  RPU',\n",
       "       'APAC  RPU', 'Domestic Members', 'Domestic Revenue',\n",
       "       'International Members', 'International Revenue',\n",
       "       'Domestic Free Trialers', 'Interntaional Free Trialers',\n",
       "       'Netflix Global Users'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 72,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "id": "2b335b93",
   "metadata": {},
   "outputs": [],
   "source": [
    "##grouping america vs. latin america and apac countries \n",
    "\n",
    "usa_df = df[[\"Date\",\"UACN Revenue\",\"UACN Members\",\"UACN RPU\"]]\n",
    "emer_df = df[[\"Date\",\"LATM Revenue\",\"APAC Revenue\",\"LATM Members\",\"APAC Members\",'LATM  RPU',\"APAC  RPU\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "id": "5edeb543",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UACN Revenue</th>\n",
       "      <th>UACN Members</th>\n",
       "      <th>UACN RPU</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "      <td>17.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>3068940705.88</td>\n",
       "      <td>72077470.59</td>\n",
       "      <td>14.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>420900367.49</td>\n",
       "      <td>3129072.47</td>\n",
       "      <td>1.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>2256851000.00</td>\n",
       "      <td>66501000.00</td>\n",
       "      <td>11.45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>2702776000.00</td>\n",
       "      <td>69969000.00</td>\n",
       "      <td>13.22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>3170972000.00</td>\n",
       "      <td>73387000.00</td>\n",
       "      <td>14.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>3350424000.00</td>\n",
       "      <td>74296000.00</td>\n",
       "      <td>14.91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>3608645000.00</td>\n",
       "      <td>75215000.00</td>\n",
       "      <td>16.37</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       UACN Revenue  UACN Members  UACN RPU\n",
       "count         17.00         17.00     17.00\n",
       "mean  3068940705.88   72077470.59     14.20\n",
       "std    420900367.49    3129072.47      1.43\n",
       "min   2256851000.00   66501000.00     11.45\n",
       "25%   2702776000.00   69969000.00     13.22\n",
       "50%   3170972000.00   73387000.00     14.25\n",
       "75%   3350424000.00   74296000.00     14.91\n",
       "max   3608645000.00   75215000.00     16.37"
      ]
     },
     "execution_count": 221,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "usa_df.describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 77,
   "id": "5ea34cc3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "T-statistic value:  13.795974933741304\n",
      "P-Value:  5.105745258527904e-15\n"
     ]
    }
   ],
   "source": [
    "import scipy.stats as sp\n",
    "t_stat, p_value = sp.stats.ttest_ind(usa_df.dropna()['UACN RPU'], emer_df.dropna()['APAC  RPU'])\n",
    "print(\"T-statistic value: \", t_stat)  \n",
    "print(\"P-Value: \", p_value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 78,
   "id": "0e65f227",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "T-statistic value:  11.653804312709147\n",
      "P-Value:  3.1405850428366584e-09\n"
     ]
    }
   ],
   "source": [
    "##PairedT-test\n",
    "from scipy.stats import ttest_rel\n",
    "t_stat, p_value = ttest_rel(usa, emer)\n",
    "print(\"T-statistic value: \", t_stat)  \n",
    "print(\"P-Value: \", p_value)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ac6a1785",
   "metadata": {},
   "outputs": [],
   "source": [
    "##High pvalue indiciates that there is the hypothesis of revenue not being different is false. The revenue is different. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 307,
   "id": "bf7c9d0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "emer_revsum = emer_df.assign(revsum = lambda x :(x[\"LATM Revenue\"]+x[\"APAC Revenue\"]))\n",
    "emer_rpusum = emer_df.assign(rpusum = lambda x :(x[\"LATM  RPU\"]+x[\"APAC  RPU\"]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 311,
   "id": "22d8f2b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "df3 = usa_df.assign(new = lambda x:(x[\"UACN RPU\"] > 10))\n",
    "df4 = emer_rpusum.assign(new = lambda x:(x[\"rpusum\"]>10))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 330,
   "id": "084a41fa",
   "metadata": {},
   "outputs": [],
   "source": [
    "df5 = df3[df3['new'] ==True]\n",
    "df6 = df4[df4['new'] ==True]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 332,
   "id": "2fa9f7f0",
   "metadata": {},
   "outputs": [],
   "source": [
    "df7 = pd.merge(df5,df6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 334,
   "id": "2214cce9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>UACN Revenue</th>\n",
       "      <th>UACN Members</th>\n",
       "      <th>UACN RPU</th>\n",
       "      <th>new</th>\n",
       "      <th>LATM Revenue</th>\n",
       "      <th>APAC Revenue</th>\n",
       "      <th>LATM Members</th>\n",
       "      <th>APAC Members</th>\n",
       "      <th>LATM  RPU</th>\n",
       "      <th>APAC  RPU</th>\n",
       "      <th>rpusum</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>31-03-2019</td>\n",
       "      <td>2256851000.00</td>\n",
       "      <td>66633000.00</td>\n",
       "      <td>11.45</td>\n",
       "      <td>True</td>\n",
       "      <td>630472000.00</td>\n",
       "      <td>319602000.00</td>\n",
       "      <td>27547000.00</td>\n",
       "      <td>12141000.00</td>\n",
       "      <td>7.84</td>\n",
       "      <td>9.37</td>\n",
       "      <td>17.21</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>30-06-2019</td>\n",
       "      <td>2501199000.00</td>\n",
       "      <td>66501000.00</td>\n",
       "      <td>12.52</td>\n",
       "      <td>True</td>\n",
       "      <td>677136000.00</td>\n",
       "      <td>349494000.00</td>\n",
       "      <td>27890000.00</td>\n",
       "      <td>12942000.00</td>\n",
       "      <td>8.14</td>\n",
       "      <td>9.29</td>\n",
       "      <td>17.43</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>30-09-2019</td>\n",
       "      <td>2621250000.00</td>\n",
       "      <td>67114000.00</td>\n",
       "      <td>13.08</td>\n",
       "      <td>True</td>\n",
       "      <td>741434000.00</td>\n",
       "      <td>382304000.00</td>\n",
       "      <td>29380000.00</td>\n",
       "      <td>14485000.00</td>\n",
       "      <td>8.63</td>\n",
       "      <td>9.29</td>\n",
       "      <td>17.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>31-12-2019</td>\n",
       "      <td>2671908000.00</td>\n",
       "      <td>67662000.00</td>\n",
       "      <td>13.22</td>\n",
       "      <td>True</td>\n",
       "      <td>746392000.00</td>\n",
       "      <td>418121000.00</td>\n",
       "      <td>31417000.00</td>\n",
       "      <td>16233000.00</td>\n",
       "      <td>8.18</td>\n",
       "      <td>9.07</td>\n",
       "      <td>17.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>31-03-2020</td>\n",
       "      <td>2702776000.00</td>\n",
       "      <td>69969000.00</td>\n",
       "      <td>13.09</td>\n",
       "      <td>True</td>\n",
       "      <td>793453000.00</td>\n",
       "      <td>483660000.00</td>\n",
       "      <td>34318000.00</td>\n",
       "      <td>19835000.00</td>\n",
       "      <td>8.05</td>\n",
       "      <td>8.94</td>\n",
       "      <td>16.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>30-06-2020</td>\n",
       "      <td>2839670000.00</td>\n",
       "      <td>72904000.00</td>\n",
       "      <td>13.25</td>\n",
       "      <td>True</td>\n",
       "      <td>785368000.00</td>\n",
       "      <td>569140000.00</td>\n",
       "      <td>36068000.00</td>\n",
       "      <td>22492000.00</td>\n",
       "      <td>7.44</td>\n",
       "      <td>8.96</td>\n",
       "      <td>16.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>30-09-2020</td>\n",
       "      <td>2933445000.00</td>\n",
       "      <td>73081000.00</td>\n",
       "      <td>13.40</td>\n",
       "      <td>True</td>\n",
       "      <td>789384000.00</td>\n",
       "      <td>634891000.00</td>\n",
       "      <td>36324000.00</td>\n",
       "      <td>23504000.00</td>\n",
       "      <td>7.27</td>\n",
       "      <td>9.20</td>\n",
       "      <td>16.47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>31-12-2020</td>\n",
       "      <td>2979505000.00</td>\n",
       "      <td>73936000.00</td>\n",
       "      <td>13.51</td>\n",
       "      <td>True</td>\n",
       "      <td>788522000.00</td>\n",
       "      <td>684609000.00</td>\n",
       "      <td>37537000.00</td>\n",
       "      <td>25492000.00</td>\n",
       "      <td>7.12</td>\n",
       "      <td>9.32</td>\n",
       "      <td>16.44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>31-03-2021</td>\n",
       "      <td>3170972000.00</td>\n",
       "      <td>74384000.00</td>\n",
       "      <td>14.25</td>\n",
       "      <td>True</td>\n",
       "      <td>836647000.00</td>\n",
       "      <td>762414000.00</td>\n",
       "      <td>37894000.00</td>\n",
       "      <td>26853000.00</td>\n",
       "      <td>7.39</td>\n",
       "      <td>9.71</td>\n",
       "      <td>17.10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>30-06-2021</td>\n",
       "      <td>3234643000.00</td>\n",
       "      <td>73951000.00</td>\n",
       "      <td>14.54</td>\n",
       "      <td>True</td>\n",
       "      <td>860882000.00</td>\n",
       "      <td>799480000.00</td>\n",
       "      <td>38658000.00</td>\n",
       "      <td>27875000.00</td>\n",
       "      <td>7.50</td>\n",
       "      <td>9.74</td>\n",
       "      <td>17.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>30-09-2021</td>\n",
       "      <td>3257697000.00</td>\n",
       "      <td>74024000.00</td>\n",
       "      <td>14.68</td>\n",
       "      <td>True</td>\n",
       "      <td>915297000.00</td>\n",
       "      <td>834002000.00</td>\n",
       "      <td>38988000.00</td>\n",
       "      <td>30051000.00</td>\n",
       "      <td>7.86</td>\n",
       "      <td>9.60</td>\n",
       "      <td>17.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>31-12-2021</td>\n",
       "      <td>3308788000.00</td>\n",
       "      <td>75215000.00</td>\n",
       "      <td>14.78</td>\n",
       "      <td>True</td>\n",
       "      <td>964150000.00</td>\n",
       "      <td>870705000.00</td>\n",
       "      <td>39961000.00</td>\n",
       "      <td>32632000.00</td>\n",
       "      <td>8.14</td>\n",
       "      <td>9.26</td>\n",
       "      <td>17.40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>31-03-2022</td>\n",
       "      <td>3350424000.00</td>\n",
       "      <td>74579000.00</td>\n",
       "      <td>14.91</td>\n",
       "      <td>True</td>\n",
       "      <td>998948000.00</td>\n",
       "      <td>916754000.00</td>\n",
       "      <td>39610000.00</td>\n",
       "      <td>33719000.00</td>\n",
       "      <td>8.37</td>\n",
       "      <td>9.21</td>\n",
       "      <td>17.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>30-06-2022</td>\n",
       "      <td>3537863000.00</td>\n",
       "      <td>73283000.00</td>\n",
       "      <td>15.95</td>\n",
       "      <td>True</td>\n",
       "      <td>1030234000.00</td>\n",
       "      <td>907719000.00</td>\n",
       "      <td>39624000.00</td>\n",
       "      <td>34799000.00</td>\n",
       "      <td>8.67</td>\n",
       "      <td>8.83</td>\n",
       "      <td>17.50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>30-09-2022</td>\n",
       "      <td>3601565000.00</td>\n",
       "      <td>73387000.00</td>\n",
       "      <td>16.37</td>\n",
       "      <td>True</td>\n",
       "      <td>1023945000.00</td>\n",
       "      <td>889037000.00</td>\n",
       "      <td>39936000.00</td>\n",
       "      <td>36228000.00</td>\n",
       "      <td>8.58</td>\n",
       "      <td>8.34</td>\n",
       "      <td>16.92</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>31-12-2022</td>\n",
       "      <td>3594791000.00</td>\n",
       "      <td>74296000.00</td>\n",
       "      <td>16.23</td>\n",
       "      <td>True</td>\n",
       "      <td>1016846000.00</td>\n",
       "      <td>856711000.00</td>\n",
       "      <td>41699000.00</td>\n",
       "      <td>38023000.00</td>\n",
       "      <td>8.30</td>\n",
       "      <td>7.69</td>\n",
       "      <td>15.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>31-03-2023</td>\n",
       "      <td>3608645000.00</td>\n",
       "      <td>74398000.00</td>\n",
       "      <td>16.18</td>\n",
       "      <td>True</td>\n",
       "      <td>1070192000.00</td>\n",
       "      <td>933523000.00</td>\n",
       "      <td>41249000.00</td>\n",
       "      <td>39478000.00</td>\n",
       "      <td>8.60</td>\n",
       "      <td>8.03</td>\n",
       "      <td>16.63</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          Date  UACN Revenue  UACN Members  UACN RPU   new  LATM Revenue  \\\n",
       "0   31-03-2019 2256851000.00   66633000.00     11.45  True  630472000.00   \n",
       "1   30-06-2019 2501199000.00   66501000.00     12.52  True  677136000.00   \n",
       "2   30-09-2019 2621250000.00   67114000.00     13.08  True  741434000.00   \n",
       "3   31-12-2019 2671908000.00   67662000.00     13.22  True  746392000.00   \n",
       "4   31-03-2020 2702776000.00   69969000.00     13.09  True  793453000.00   \n",
       "5   30-06-2020 2839670000.00   72904000.00     13.25  True  785368000.00   \n",
       "6   30-09-2020 2933445000.00   73081000.00     13.40  True  789384000.00   \n",
       "7   31-12-2020 2979505000.00   73936000.00     13.51  True  788522000.00   \n",
       "8   31-03-2021 3170972000.00   74384000.00     14.25  True  836647000.00   \n",
       "9   30-06-2021 3234643000.00   73951000.00     14.54  True  860882000.00   \n",
       "10  30-09-2021 3257697000.00   74024000.00     14.68  True  915297000.00   \n",
       "11  31-12-2021 3308788000.00   75215000.00     14.78  True  964150000.00   \n",
       "12  31-03-2022 3350424000.00   74579000.00     14.91  True  998948000.00   \n",
       "13  30-06-2022 3537863000.00   73283000.00     15.95  True 1030234000.00   \n",
       "14  30-09-2022 3601565000.00   73387000.00     16.37  True 1023945000.00   \n",
       "15  31-12-2022 3594791000.00   74296000.00     16.23  True 1016846000.00   \n",
       "16  31-03-2023 3608645000.00   74398000.00     16.18  True 1070192000.00   \n",
       "\n",
       "    APAC Revenue  LATM Members  APAC Members  LATM  RPU  APAC  RPU  rpusum  \n",
       "0   319602000.00   27547000.00   12141000.00       7.84       9.37   17.21  \n",
       "1   349494000.00   27890000.00   12942000.00       8.14       9.29   17.43  \n",
       "2   382304000.00   29380000.00   14485000.00       8.63       9.29   17.92  \n",
       "3   418121000.00   31417000.00   16233000.00       8.18       9.07   17.25  \n",
       "4   483660000.00   34318000.00   19835000.00       8.05       8.94   16.99  \n",
       "5   569140000.00   36068000.00   22492000.00       7.44       8.96   16.40  \n",
       "6   634891000.00   36324000.00   23504000.00       7.27       9.20   16.47  \n",
       "7   684609000.00   37537000.00   25492000.00       7.12       9.32   16.44  \n",
       "8   762414000.00   37894000.00   26853000.00       7.39       9.71   17.10  \n",
       "9   799480000.00   38658000.00   27875000.00       7.50       9.74   17.24  \n",
       "10  834002000.00   38988000.00   30051000.00       7.86       9.60   17.46  \n",
       "11  870705000.00   39961000.00   32632000.00       8.14       9.26   17.40  \n",
       "12  916754000.00   39610000.00   33719000.00       8.37       9.21   17.58  \n",
       "13  907719000.00   39624000.00   34799000.00       8.67       8.83   17.50  \n",
       "14  889037000.00   39936000.00   36228000.00       8.58       8.34   16.92  \n",
       "15  856711000.00   41699000.00   38023000.00       8.30       7.69   15.99  \n",
       "16  933523000.00   41249000.00   39478000.00       8.60       8.03   16.63  "
      ]
     },
     "execution_count": 334,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df7\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 336,
   "id": "7553b304",
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2012' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2012' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2012' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2012' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2013' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2013' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2013' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2013' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2014' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2014' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2014' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2014' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2015' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2015' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2015' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2015' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2016' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2016' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2016' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2016' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2017' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2017' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2017' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2017' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2018' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2018' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2018' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2018' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2019' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2019' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2019' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2019' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2020' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2020' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2020' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2020' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2021' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2021' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2021' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2021' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2022' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-06-2022' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '30-09-2022' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-12-2022' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
      "C:\\Users\\rajvi\\AppData\\Local\\Temp\\ipykernel_34224\\2398707993.py:4: UserWarning: Parsing '31-03-2023' in DD/MM/YYYY format. Provide format or specify infer_datetime_format=True for consistent parsing.\n",
      "  df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n"
     ]
    }
   ],
   "source": [
    "##growth rate in different areas\n",
    "\n",
    "from datetime import datetime as dt\n",
    "df7['Date'] = pd.to_datetime(df['Date'],errors = 'coerce')\n",
    "df7[\"Year\"] = df7['Date'].dt.strftime(\"%Y\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 338,
   "id": "f2297a55",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Date</th>\n",
       "      <th>UACN Revenue</th>\n",
       "      <th>UACN Members</th>\n",
       "      <th>UACN RPU</th>\n",
       "      <th>new</th>\n",
       "      <th>LATM Revenue</th>\n",
       "      <th>APAC Revenue</th>\n",
       "      <th>LATM Members</th>\n",
       "      <th>APAC Members</th>\n",
       "      <th>LATM  RPU</th>\n",
       "      <th>APAC  RPU</th>\n",
       "      <th>rpusum</th>\n",
       "      <th>Year</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2012-03-31</td>\n",
       "      <td>2256851000.00</td>\n",
       "      <td>66633000.00</td>\n",
       "      <td>11.45</td>\n",
       "      <td>True</td>\n",
       "      <td>630472000.00</td>\n",
       "      <td>319602000.00</td>\n",
       "      <td>27547000.00</td>\n",
       "      <td>12141000.00</td>\n",
       "      <td>7.84</td>\n",
       "      <td>9.37</td>\n",
       "      <td>17.21</td>\n",
       "      <td>2012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2012-06-30</td>\n",
       "      <td>2501199000.00</td>\n",
       "      <td>66501000.00</td>\n",
       "      <td>12.52</td>\n",
       "      <td>True</td>\n",
       "      <td>677136000.00</td>\n",
       "      <td>349494000.00</td>\n",
       "      <td>27890000.00</td>\n",
       "      <td>12942000.00</td>\n",
       "      <td>8.14</td>\n",
       "      <td>9.29</td>\n",
       "      <td>17.43</td>\n",
       "      <td>2012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2012-09-30</td>\n",
       "      <td>2621250000.00</td>\n",
       "      <td>67114000.00</td>\n",
       "      <td>13.08</td>\n",
       "      <td>True</td>\n",
       "      <td>741434000.00</td>\n",
       "      <td>382304000.00</td>\n",
       "      <td>29380000.00</td>\n",
       "      <td>14485000.00</td>\n",
       "      <td>8.63</td>\n",
       "      <td>9.29</td>\n",
       "      <td>17.92</td>\n",
       "      <td>2012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2012-12-31</td>\n",
       "      <td>2671908000.00</td>\n",
       "      <td>67662000.00</td>\n",
       "      <td>13.22</td>\n",
       "      <td>True</td>\n",
       "      <td>746392000.00</td>\n",
       "      <td>418121000.00</td>\n",
       "      <td>31417000.00</td>\n",
       "      <td>16233000.00</td>\n",
       "      <td>8.18</td>\n",
       "      <td>9.07</td>\n",
       "      <td>17.25</td>\n",
       "      <td>2012</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2013-03-31</td>\n",
       "      <td>2702776000.00</td>\n",
       "      <td>69969000.00</td>\n",
       "      <td>13.09</td>\n",
       "      <td>True</td>\n",
       "      <td>793453000.00</td>\n",
       "      <td>483660000.00</td>\n",
       "      <td>34318000.00</td>\n",
       "      <td>19835000.00</td>\n",
       "      <td>8.05</td>\n",
       "      <td>8.94</td>\n",
       "      <td>16.99</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>2013-06-30</td>\n",
       "      <td>2839670000.00</td>\n",
       "      <td>72904000.00</td>\n",
       "      <td>13.25</td>\n",
       "      <td>True</td>\n",
       "      <td>785368000.00</td>\n",
       "      <td>569140000.00</td>\n",
       "      <td>36068000.00</td>\n",
       "      <td>22492000.00</td>\n",
       "      <td>7.44</td>\n",
       "      <td>8.96</td>\n",
       "      <td>16.40</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2013-09-30</td>\n",
       "      <td>2933445000.00</td>\n",
       "      <td>73081000.00</td>\n",
       "      <td>13.40</td>\n",
       "      <td>True</td>\n",
       "      <td>789384000.00</td>\n",
       "      <td>634891000.00</td>\n",
       "      <td>36324000.00</td>\n",
       "      <td>23504000.00</td>\n",
       "      <td>7.27</td>\n",
       "      <td>9.20</td>\n",
       "      <td>16.47</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2013-12-31</td>\n",
       "      <td>2979505000.00</td>\n",
       "      <td>73936000.00</td>\n",
       "      <td>13.51</td>\n",
       "      <td>True</td>\n",
       "      <td>788522000.00</td>\n",
       "      <td>684609000.00</td>\n",
       "      <td>37537000.00</td>\n",
       "      <td>25492000.00</td>\n",
       "      <td>7.12</td>\n",
       "      <td>9.32</td>\n",
       "      <td>16.44</td>\n",
       "      <td>2013</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>2014-03-31</td>\n",
       "      <td>3170972000.00</td>\n",
       "      <td>74384000.00</td>\n",
       "      <td>14.25</td>\n",
       "      <td>True</td>\n",
       "      <td>836647000.00</td>\n",
       "      <td>762414000.00</td>\n",
       "      <td>37894000.00</td>\n",
       "      <td>26853000.00</td>\n",
       "      <td>7.39</td>\n",
       "      <td>9.71</td>\n",
       "      <td>17.10</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2014-06-30</td>\n",
       "      <td>3234643000.00</td>\n",
       "      <td>73951000.00</td>\n",
       "      <td>14.54</td>\n",
       "      <td>True</td>\n",
       "      <td>860882000.00</td>\n",
       "      <td>799480000.00</td>\n",
       "      <td>38658000.00</td>\n",
       "      <td>27875000.00</td>\n",
       "      <td>7.50</td>\n",
       "      <td>9.74</td>\n",
       "      <td>17.24</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>2014-09-30</td>\n",
       "      <td>3257697000.00</td>\n",
       "      <td>74024000.00</td>\n",
       "      <td>14.68</td>\n",
       "      <td>True</td>\n",
       "      <td>915297000.00</td>\n",
       "      <td>834002000.00</td>\n",
       "      <td>38988000.00</td>\n",
       "      <td>30051000.00</td>\n",
       "      <td>7.86</td>\n",
       "      <td>9.60</td>\n",
       "      <td>17.46</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>2014-12-31</td>\n",
       "      <td>3308788000.00</td>\n",
       "      <td>75215000.00</td>\n",
       "      <td>14.78</td>\n",
       "      <td>True</td>\n",
       "      <td>964150000.00</td>\n",
       "      <td>870705000.00</td>\n",
       "      <td>39961000.00</td>\n",
       "      <td>32632000.00</td>\n",
       "      <td>8.14</td>\n",
       "      <td>9.26</td>\n",
       "      <td>17.40</td>\n",
       "      <td>2014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>2015-03-31</td>\n",
       "      <td>3350424000.00</td>\n",
       "      <td>74579000.00</td>\n",
       "      <td>14.91</td>\n",
       "      <td>True</td>\n",
       "      <td>998948000.00</td>\n",
       "      <td>916754000.00</td>\n",
       "      <td>39610000.00</td>\n",
       "      <td>33719000.00</td>\n",
       "      <td>8.37</td>\n",
       "      <td>9.21</td>\n",
       "      <td>17.58</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>2015-06-30</td>\n",
       "      <td>3537863000.00</td>\n",
       "      <td>73283000.00</td>\n",
       "      <td>15.95</td>\n",
       "      <td>True</td>\n",
       "      <td>1030234000.00</td>\n",
       "      <td>907719000.00</td>\n",
       "      <td>39624000.00</td>\n",
       "      <td>34799000.00</td>\n",
       "      <td>8.67</td>\n",
       "      <td>8.83</td>\n",
       "      <td>17.50</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>2015-09-30</td>\n",
       "      <td>3601565000.00</td>\n",
       "      <td>73387000.00</td>\n",
       "      <td>16.37</td>\n",
       "      <td>True</td>\n",
       "      <td>1023945000.00</td>\n",
       "      <td>889037000.00</td>\n",
       "      <td>39936000.00</td>\n",
       "      <td>36228000.00</td>\n",
       "      <td>8.58</td>\n",
       "      <td>8.34</td>\n",
       "      <td>16.92</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>2015-12-31</td>\n",
       "      <td>3594791000.00</td>\n",
       "      <td>74296000.00</td>\n",
       "      <td>16.23</td>\n",
       "      <td>True</td>\n",
       "      <td>1016846000.00</td>\n",
       "      <td>856711000.00</td>\n",
       "      <td>41699000.00</td>\n",
       "      <td>38023000.00</td>\n",
       "      <td>8.30</td>\n",
       "      <td>7.69</td>\n",
       "      <td>15.99</td>\n",
       "      <td>2015</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>2016-03-31</td>\n",
       "      <td>3608645000.00</td>\n",
       "      <td>74398000.00</td>\n",
       "      <td>16.18</td>\n",
       "      <td>True</td>\n",
       "      <td>1070192000.00</td>\n",
       "      <td>933523000.00</td>\n",
       "      <td>41249000.00</td>\n",
       "      <td>39478000.00</td>\n",
       "      <td>8.60</td>\n",
       "      <td>8.03</td>\n",
       "      <td>16.63</td>\n",
       "      <td>2016</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "         Date  UACN Revenue  UACN Members  UACN RPU   new  LATM Revenue  \\\n",
       "0  2012-03-31 2256851000.00   66633000.00     11.45  True  630472000.00   \n",
       "1  2012-06-30 2501199000.00   66501000.00     12.52  True  677136000.00   \n",
       "2  2012-09-30 2621250000.00   67114000.00     13.08  True  741434000.00   \n",
       "3  2012-12-31 2671908000.00   67662000.00     13.22  True  746392000.00   \n",
       "4  2013-03-31 2702776000.00   69969000.00     13.09  True  793453000.00   \n",
       "5  2013-06-30 2839670000.00   72904000.00     13.25  True  785368000.00   \n",
       "6  2013-09-30 2933445000.00   73081000.00     13.40  True  789384000.00   \n",
       "7  2013-12-31 2979505000.00   73936000.00     13.51  True  788522000.00   \n",
       "8  2014-03-31 3170972000.00   74384000.00     14.25  True  836647000.00   \n",
       "9  2014-06-30 3234643000.00   73951000.00     14.54  True  860882000.00   \n",
       "10 2014-09-30 3257697000.00   74024000.00     14.68  True  915297000.00   \n",
       "11 2014-12-31 3308788000.00   75215000.00     14.78  True  964150000.00   \n",
       "12 2015-03-31 3350424000.00   74579000.00     14.91  True  998948000.00   \n",
       "13 2015-06-30 3537863000.00   73283000.00     15.95  True 1030234000.00   \n",
       "14 2015-09-30 3601565000.00   73387000.00     16.37  True 1023945000.00   \n",
       "15 2015-12-31 3594791000.00   74296000.00     16.23  True 1016846000.00   \n",
       "16 2016-03-31 3608645000.00   74398000.00     16.18  True 1070192000.00   \n",
       "\n",
       "    APAC Revenue  LATM Members  APAC Members  LATM  RPU  APAC  RPU  rpusum  \\\n",
       "0   319602000.00   27547000.00   12141000.00       7.84       9.37   17.21   \n",
       "1   349494000.00   27890000.00   12942000.00       8.14       9.29   17.43   \n",
       "2   382304000.00   29380000.00   14485000.00       8.63       9.29   17.92   \n",
       "3   418121000.00   31417000.00   16233000.00       8.18       9.07   17.25   \n",
       "4   483660000.00   34318000.00   19835000.00       8.05       8.94   16.99   \n",
       "5   569140000.00   36068000.00   22492000.00       7.44       8.96   16.40   \n",
       "6   634891000.00   36324000.00   23504000.00       7.27       9.20   16.47   \n",
       "7   684609000.00   37537000.00   25492000.00       7.12       9.32   16.44   \n",
       "8   762414000.00   37894000.00   26853000.00       7.39       9.71   17.10   \n",
       "9   799480000.00   38658000.00   27875000.00       7.50       9.74   17.24   \n",
       "10  834002000.00   38988000.00   30051000.00       7.86       9.60   17.46   \n",
       "11  870705000.00   39961000.00   32632000.00       8.14       9.26   17.40   \n",
       "12  916754000.00   39610000.00   33719000.00       8.37       9.21   17.58   \n",
       "13  907719000.00   39624000.00   34799000.00       8.67       8.83   17.50   \n",
       "14  889037000.00   39936000.00   36228000.00       8.58       8.34   16.92   \n",
       "15  856711000.00   41699000.00   38023000.00       8.30       7.69   15.99   \n",
       "16  933523000.00   41249000.00   39478000.00       8.60       8.03   16.63   \n",
       "\n",
       "    Year  \n",
       "0   2012  \n",
       "1   2012  \n",
       "2   2012  \n",
       "3   2012  \n",
       "4   2013  \n",
       "5   2013  \n",
       "6   2013  \n",
       "7   2013  \n",
       "8   2014  \n",
       "9   2014  \n",
       "10  2014  \n",
       "11  2014  \n",
       "12  2015  \n",
       "13  2015  \n",
       "14  2015  \n",
       "15  2015  \n",
       "16  2016  "
      ]
     },
     "execution_count": 338,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 339,
   "id": "3a201a00",
   "metadata": {},
   "outputs": [],
   "source": [
    "data = df7.groupby('Year').sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 340,
   "id": "512b7f0d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UACN Revenue</th>\n",
       "      <th>UACN Members</th>\n",
       "      <th>UACN RPU</th>\n",
       "      <th>new</th>\n",
       "      <th>LATM Revenue</th>\n",
       "      <th>APAC Revenue</th>\n",
       "      <th>LATM Members</th>\n",
       "      <th>APAC Members</th>\n",
       "      <th>LATM  RPU</th>\n",
       "      <th>APAC  RPU</th>\n",
       "      <th>rpusum</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2012</th>\n",
       "      <td>10051208000.00</td>\n",
       "      <td>267910000.00</td>\n",
       "      <td>50.27</td>\n",
       "      <td>4</td>\n",
       "      <td>2795434000.00</td>\n",
       "      <td>1469521000.00</td>\n",
       "      <td>116234000.00</td>\n",
       "      <td>55801000.00</td>\n",
       "      <td>32.79</td>\n",
       "      <td>37.02</td>\n",
       "      <td>69.81</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2013</th>\n",
       "      <td>11455396000.00</td>\n",
       "      <td>289890000.00</td>\n",
       "      <td>53.25</td>\n",
       "      <td>4</td>\n",
       "      <td>3156727000.00</td>\n",
       "      <td>2372300000.00</td>\n",
       "      <td>144247000.00</td>\n",
       "      <td>91323000.00</td>\n",
       "      <td>29.88</td>\n",
       "      <td>36.42</td>\n",
       "      <td>66.30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2014</th>\n",
       "      <td>12972100000.00</td>\n",
       "      <td>297574000.00</td>\n",
       "      <td>58.25</td>\n",
       "      <td>4</td>\n",
       "      <td>3576976000.00</td>\n",
       "      <td>3266601000.00</td>\n",
       "      <td>155501000.00</td>\n",
       "      <td>117411000.00</td>\n",
       "      <td>30.89</td>\n",
       "      <td>38.31</td>\n",
       "      <td>69.20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2015</th>\n",
       "      <td>14084643000.00</td>\n",
       "      <td>295545000.00</td>\n",
       "      <td>63.46</td>\n",
       "      <td>4</td>\n",
       "      <td>4069973000.00</td>\n",
       "      <td>3570221000.00</td>\n",
       "      <td>160869000.00</td>\n",
       "      <td>142769000.00</td>\n",
       "      <td>33.92</td>\n",
       "      <td>34.07</td>\n",
       "      <td>67.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2016</th>\n",
       "      <td>3608645000.00</td>\n",
       "      <td>74398000.00</td>\n",
       "      <td>16.18</td>\n",
       "      <td>1</td>\n",
       "      <td>1070192000.00</td>\n",
       "      <td>933523000.00</td>\n",
       "      <td>41249000.00</td>\n",
       "      <td>39478000.00</td>\n",
       "      <td>8.60</td>\n",
       "      <td>8.03</td>\n",
       "      <td>16.63</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       UACN Revenue  UACN Members  UACN RPU  new  LATM Revenue  APAC Revenue  \\\n",
       "Year                                                                           \n",
       "2012 10051208000.00  267910000.00     50.27    4 2795434000.00 1469521000.00   \n",
       "2013 11455396000.00  289890000.00     53.25    4 3156727000.00 2372300000.00   \n",
       "2014 12972100000.00  297574000.00     58.25    4 3576976000.00 3266601000.00   \n",
       "2015 14084643000.00  295545000.00     63.46    4 4069973000.00 3570221000.00   \n",
       "2016  3608645000.00   74398000.00     16.18    1 1070192000.00  933523000.00   \n",
       "\n",
       "      LATM Members  APAC Members  LATM  RPU  APAC  RPU  rpusum  \n",
       "Year                                                            \n",
       "2012  116234000.00   55801000.00      32.79      37.02   69.81  \n",
       "2013  144247000.00   91323000.00      29.88      36.42   66.30  \n",
       "2014  155501000.00  117411000.00      30.89      38.31   69.20  \n",
       "2015  160869000.00  142769000.00      33.92      34.07   67.99  \n",
       "2016   41249000.00   39478000.00       8.60       8.03   16.63  "
      ]
     },
     "execution_count": 340,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 341,
   "id": "0e11fcb9",
   "metadata": {},
   "outputs": [],
   "source": [
    "##creating year over year growth \n",
    "\n",
    "data['UACNGrowth'] = data['UACN Revenue'].pct_change(periods = 1)*100\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 296,
   "id": "d62beb9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UACN Revenue</th>\n",
       "      <th>UACN Members</th>\n",
       "      <th>UACN RPU</th>\n",
       "      <th>new</th>\n",
       "      <th>LATM Revenue</th>\n",
       "      <th>APAC Revenue</th>\n",
       "      <th>LATM Members</th>\n",
       "      <th>APAC Members</th>\n",
       "      <th>LATM  RPU</th>\n",
       "      <th>APAC  RPU</th>\n",
       "      <th>revsum</th>\n",
       "      <th>rpusum</th>\n",
       "      <th>UACNGrowth</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Year</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>2019</th>\n",
       "      <td>7794357000.00</td>\n",
       "      <td>201277000.00</td>\n",
       "      <td>38.82</td>\n",
       "      <td>3</td>\n",
       "      <td>2164962000.00</td>\n",
       "      <td>1149919000.00</td>\n",
       "      <td>88687000.00</td>\n",
       "      <td>43660000.00</td>\n",
       "      <td>24.95</td>\n",
       "      <td>27.65</td>\n",
       "      <td>3314881000.00</td>\n",
       "      <td>52.60</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2020</th>\n",
       "      <td>11455396000.00</td>\n",
       "      <td>289890000.00</td>\n",
       "      <td>53.25</td>\n",
       "      <td>4</td>\n",
       "      <td>3156727000.00</td>\n",
       "      <td>2372300000.00</td>\n",
       "      <td>144247000.00</td>\n",
       "      <td>91323000.00</td>\n",
       "      <td>29.88</td>\n",
       "      <td>36.42</td>\n",
       "      <td>5529027000.00</td>\n",
       "      <td>66.30</td>\n",
       "      <td>46.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2021</th>\n",
       "      <td>12972100000.00</td>\n",
       "      <td>297574000.00</td>\n",
       "      <td>58.25</td>\n",
       "      <td>4</td>\n",
       "      <td>3576976000.00</td>\n",
       "      <td>3266601000.00</td>\n",
       "      <td>155501000.00</td>\n",
       "      <td>117411000.00</td>\n",
       "      <td>30.89</td>\n",
       "      <td>38.31</td>\n",
       "      <td>6843577000.00</td>\n",
       "      <td>69.20</td>\n",
       "      <td>13.24</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2022</th>\n",
       "      <td>14084643000.00</td>\n",
       "      <td>295545000.00</td>\n",
       "      <td>63.46</td>\n",
       "      <td>4</td>\n",
       "      <td>4069973000.00</td>\n",
       "      <td>3570221000.00</td>\n",
       "      <td>160869000.00</td>\n",
       "      <td>142769000.00</td>\n",
       "      <td>33.92</td>\n",
       "      <td>34.07</td>\n",
       "      <td>7640194000.00</td>\n",
       "      <td>67.99</td>\n",
       "      <td>8.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2023</th>\n",
       "      <td>3608645000.00</td>\n",
       "      <td>74398000.00</td>\n",
       "      <td>16.18</td>\n",
       "      <td>1</td>\n",
       "      <td>1070192000.00</td>\n",
       "      <td>933523000.00</td>\n",
       "      <td>41249000.00</td>\n",
       "      <td>39478000.00</td>\n",
       "      <td>8.60</td>\n",
       "      <td>8.03</td>\n",
       "      <td>2003715000.00</td>\n",
       "      <td>16.63</td>\n",
       "      <td>-74.38</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       UACN Revenue  UACN Members  UACN RPU  new  LATM Revenue  APAC Revenue  \\\n",
       "Year                                                                           \n",
       "2019  7794357000.00  201277000.00     38.82    3 2164962000.00 1149919000.00   \n",
       "2020 11455396000.00  289890000.00     53.25    4 3156727000.00 2372300000.00   \n",
       "2021 12972100000.00  297574000.00     58.25    4 3576976000.00 3266601000.00   \n",
       "2022 14084643000.00  295545000.00     63.46    4 4069973000.00 3570221000.00   \n",
       "2023  3608645000.00   74398000.00     16.18    1 1070192000.00  933523000.00   \n",
       "\n",
       "      LATM Members  APAC Members  LATM  RPU  APAC  RPU        revsum  rpusum  \\\n",
       "Year                                                                           \n",
       "2019   88687000.00   43660000.00      24.95      27.65 3314881000.00   52.60   \n",
       "2020  144247000.00   91323000.00      29.88      36.42 5529027000.00   66.30   \n",
       "2021  155501000.00  117411000.00      30.89      38.31 6843577000.00   69.20   \n",
       "2022  160869000.00  142769000.00      33.92      34.07 7640194000.00   67.99   \n",
       "2023   41249000.00   39478000.00       8.60       8.03 2003715000.00   16.63   \n",
       "\n",
       "      UACNGrowth  \n",
       "Year              \n",
       "2019         NaN  \n",
       "2020       46.97  \n",
       "2021       13.24  \n",
       "2022        8.58  \n",
       "2023      -74.38  "
      ]
     },
     "execution_count": 296,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 342,
   "id": "6a1ba890",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>UACN Revenue</th>\n",
       "      <th>UACN Members</th>\n",
       "      <th>UACN RPU</th>\n",
       "      <th>new</th>\n",
       "      <th>LATM Revenue</th>\n",
       "      <th>APAC Revenue</th>\n",
       "      <th>LATM Members</th>\n",
       "      <th>APAC Members</th>\n",
       "      <th>LATM  RPU</th>\n",
       "      <th>APAC  RPU</th>\n",
       "      <th>rpusum</th>\n",
       "      <th>UACNGrowth</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>UACN Revenue</th>\n",
       "      <td>1.00</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.93</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.89</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.96</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UACN Members</th>\n",
       "      <td>0.96</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.98</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0.76</td>\n",
       "      <td>0.97</td>\n",
       "      <td>0.73</td>\n",
       "      <td>0.98</td>\n",
       "      <td>0.98</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UACN RPU</th>\n",
       "      <td>0.99</td>\n",
       "      <td>0.98</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.85</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.83</td>\n",
       "      <td>0.97</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0.96</td>\n",
       "      <td>0.97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>new</th>\n",
       "      <td>0.93</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.96</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.91</td>\n",
       "      <td>0.69</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LATM Revenue</th>\n",
       "      <td>1.00</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.91</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.91</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.94</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>APAC Revenue</th>\n",
       "      <td>0.90</td>\n",
       "      <td>0.76</td>\n",
       "      <td>0.85</td>\n",
       "      <td>0.69</td>\n",
       "      <td>0.92</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.89</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.70</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.68</td>\n",
       "      <td>0.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LATM Members</th>\n",
       "      <td>0.99</td>\n",
       "      <td>0.97</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.89</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.87</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.99</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>APAC Members</th>\n",
       "      <td>0.89</td>\n",
       "      <td>0.73</td>\n",
       "      <td>0.83</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.91</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.87</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.67</td>\n",
       "      <td>0.61</td>\n",
       "      <td>0.64</td>\n",
       "      <td>0.85</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>LATM  RPU</th>\n",
       "      <td>0.93</td>\n",
       "      <td>0.98</td>\n",
       "      <td>0.97</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.70</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.67</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.97</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>APAC  RPU</th>\n",
       "      <td>0.90</td>\n",
       "      <td>0.98</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.65</td>\n",
       "      <td>0.92</td>\n",
       "      <td>0.61</td>\n",
       "      <td>0.97</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>rpusum</th>\n",
       "      <td>0.92</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.96</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.90</td>\n",
       "      <td>0.68</td>\n",
       "      <td>0.93</td>\n",
       "      <td>0.64</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.99</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>UACNGrowth</th>\n",
       "      <td>0.96</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.97</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.94</td>\n",
       "      <td>0.88</td>\n",
       "      <td>0.99</td>\n",
       "      <td>0.85</td>\n",
       "      <td>0.98</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              UACN Revenue  UACN Members  UACN RPU  new  LATM Revenue  \\\n",
       "UACN Revenue          1.00          0.96      0.99 0.93          1.00   \n",
       "UACN Members          0.96          1.00      0.98 0.99          0.94   \n",
       "UACN RPU              0.99          0.98      1.00 0.96          0.99   \n",
       "new                   0.93          0.99      0.96 1.00          0.91   \n",
       "LATM Revenue          1.00          0.94      0.99 0.91          1.00   \n",
       "APAC Revenue          0.90          0.76      0.85 0.69          0.92   \n",
       "LATM Members          0.99          0.97      0.99 0.94          0.99   \n",
       "APAC Members          0.89          0.73      0.83 0.65          0.91   \n",
       "LATM  RPU             0.93          0.98      0.97 0.99          0.92   \n",
       "APAC  RPU             0.90          0.98      0.94 0.99          0.88   \n",
       "rpusum                0.92          0.99      0.96 1.00          0.90   \n",
       "UACNGrowth            0.96          1.00      0.97 1.00          0.94   \n",
       "\n",
       "              APAC Revenue  LATM Members  APAC Members  LATM  RPU  APAC  RPU  \\\n",
       "UACN Revenue          0.90          0.99          0.89       0.93       0.90   \n",
       "UACN Members          0.76          0.97          0.73       0.98       0.98   \n",
       "UACN RPU              0.85          0.99          0.83       0.97       0.94   \n",
       "new                   0.69          0.94          0.65       0.99       0.99   \n",
       "LATM Revenue          0.92          0.99          0.91       0.92       0.88   \n",
       "APAC Revenue          1.00          0.89          0.99       0.70       0.65   \n",
       "LATM Members          0.89          1.00          0.87       0.92       0.92   \n",
       "APAC Members          0.99          0.87          1.00       0.67       0.61   \n",
       "LATM  RPU             0.70          0.92          0.67       1.00       0.97   \n",
       "APAC  RPU             0.65          0.92          0.61       0.97       1.00   \n",
       "rpusum                0.68          0.93          0.64       0.99       0.99   \n",
       "UACNGrowth            0.88          0.99          0.85       0.98       1.00   \n",
       "\n",
       "              rpusum  UACNGrowth  \n",
       "UACN Revenue    0.92        0.96  \n",
       "UACN Members    0.99        1.00  \n",
       "UACN RPU        0.96        0.97  \n",
       "new             1.00        1.00  \n",
       "LATM Revenue    0.90        0.94  \n",
       "APAC Revenue    0.68        0.88  \n",
       "LATM Members    0.93        0.99  \n",
       "APAC Members    0.64        0.85  \n",
       "LATM  RPU       0.99        0.98  \n",
       "APAC  RPU       0.99        1.00  \n",
       "rpusum          1.00        1.00  \n",
       "UACNGrowth      1.00        1.00  "
      ]
     },
     "execution_count": 342,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.corr()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 344,
   "id": "311dbc35",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Index(['UACN Revenue', 'UACN Members', 'UACN RPU', 'new', 'LATM Revenue',\n",
       "       'APAC Revenue', 'LATM Members', 'APAC Members', 'LATM  RPU',\n",
       "       'APAC  RPU', 'rpusum', 'UACNGrowth'],\n",
       "      dtype='object')"
      ]
     },
     "execution_count": 344,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.columns"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 346,
   "id": "f74867aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "X = data[[\"UACN Revenue\",\"UACN Members\"]]\n",
    "Y = data[[\"UACN RPU\"]]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 350,
   "id": "5b5abba5",
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.model_selection import train_test_split\n",
    "X_train, X_test, y_train, y_test = train_test_split(X,Y,test_size = 0.4, random_state = 101)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 351,
   "id": "2e92255d",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[62.13746527]\n"
     ]
    }
   ],
   "source": [
    "from sklearn.linear_model import LinearRegression\n",
    "model = LinearRegression()\n",
    "model.fit(X_train, y_train)\n",
    "print(model.intercept_)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 362,
   "id": "6f46a69a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[51.61213101],\n",
       "       [62.74271188]])"
      ]
     },
     "execution_count": 362,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "predictions = model.predict(X_test)\n",
    "predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 364,
   "id": "3b2214f7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "                            OLS Regression Results                            \n",
      "==============================================================================\n",
      "Dep. Variable:               UACN RPU   R-squared:                       1.000\n",
      "Model:                            OLS   Adj. R-squared:                    nan\n",
      "Method:                 Least Squares   F-statistic:                       nan\n",
      "Date:                Sun, 18 Jun 2023   Prob (F-statistic):                nan\n",
      "Time:                        16:21:05   Log-Likelihood:                 86.468\n",
      "No. Observations:                   3   AIC:                            -166.9\n",
      "Df Residuals:                       0   BIC:                            -169.6\n",
      "Df Model:                           2                                         \n",
      "Covariance Type:            nonrobust                                         \n",
      "================================================================================\n",
      "                   coef    std err          t      P>|t|      [0.025      0.975]\n",
      "--------------------------------------------------------------------------------\n",
      "const           62.1375        inf          0        nan         nan         nan\n",
      "UACN Revenue  4.316e-09        inf          0        nan         nan         nan\n",
      "UACN Members -2.012e-07        inf         -0        nan         nan         nan\n",
      "==============================================================================\n",
      "Omnibus:                          nan   Durbin-Watson:                   0.003\n",
      "Prob(Omnibus):                    nan   Jarque-Bera (JB):                0.531\n",
      "Skew:                           0.707   Prob(JB):                        0.767\n",
      "Kurtosis:                       1.500   Cond. No.                     1.65e+12\n",
      "==============================================================================\n",
      "\n",
      "Notes:\n",
      "[1] Standard Errors assume that the covariance matrix of the errors is correctly specified.\n",
      "[2] The condition number is large, 1.65e+12. This might indicate that there are\n",
      "strong multicollinearity or other numerical problems.\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "C:\\Users\\rajvi\\anaconda3\\lib\\site-packages\\statsmodels\\stats\\stattools.py:74: ValueWarning: omni_normtest is not valid with less than 8 observations; 3 samples were given.\n",
      "  warn(\"omni_normtest is not valid with less than 8 observations; %i \"\n",
      "C:\\Users\\rajvi\\anaconda3\\lib\\site-packages\\statsmodels\\regression\\linear_model.py:1749: RuntimeWarning: divide by zero encountered in true_divide\n",
      "  return 1 - (np.divide(self.nobs - self.k_constant, self.df_resid)\n",
      "C:\\Users\\rajvi\\anaconda3\\lib\\site-packages\\statsmodels\\regression\\linear_model.py:1749: RuntimeWarning: invalid value encountered in double_scalars\n",
      "  return 1 - (np.divide(self.nobs - self.k_constant, self.df_resid)\n",
      "C:\\Users\\rajvi\\anaconda3\\lib\\site-packages\\statsmodels\\regression\\linear_model.py:1671: RuntimeWarning: divide by zero encountered in double_scalars\n",
      "  return np.dot(wresid, wresid) / self.df_resid\n"
     ]
    }
   ],
   "source": [
    "import statsmodels.api as sm\n",
    "X_train_Sm= sm.add_constant(X_train)\n",
    "X_train_Sm= sm.add_constant(X_train)\n",
    "ls=sm.OLS(y_train,X_train_Sm).fit()\n",
    "print(ls.summary())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b73dfb6c",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
